services:
  web:
    image: nginx:alpine
    container_name: nginx_web
    ports:
      - "8059:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - app
    networks:
      - app-network

  app:
    build: .
    container_name: fastapi_app
    expose:
      - "8000"
    volumes:
      - ./app:/app/app
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/postgres
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network

  db:
    image: postgres:alpine
    container_name: postgres_db
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_HOST_AUTH_METHOD=trust
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./sql/init.sql:/docker-entrypoint-initdb.d/1-init.sql:ro
      - ./sql/data.sql:/docker-entrypoint-initdb.d/2-data.sql:ro
    ports:
      - "5432:5432"  # Exponer el puerto para acceso externo
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    command: postgres -c listen_addresses='*' # Permitir conexiones desde cualquier direcci√≥n

networks:
  app-network:
    name: app_network
    driver: bridge

volumes:
  postgres_data:
    name: postgres_data